"""refactor database schema to more accurately reflect data structure

Revision ID: e2a4ab2e45e7
Revises: 30c327f7cd91
Create Date: 2025-01-21 20:02:59.246671

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e2a4ab2e45e7'
down_revision = '30c327f7cd91'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('artist_album_track',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('artist_id', sa.Integer(), nullable=False),
    sa.Column('album_id', sa.Integer(), nullable=False),
    sa.Column('track_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['album_id'], ['albums.id'], ),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], ),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('track_artist')
    with op.batch_alter_table('albums', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title', sa.String(length=120), nullable=False))
        batch_op.add_column(sa.Column('total_tracks', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('release_date', sa.Date(), nullable=True))
        batch_op.drop_constraint('albums_ean_key', type_='unique')
        batch_op.drop_constraint('albums_isrc_key', type_='unique')
        batch_op.drop_column('name')
        batch_op.drop_column('ean')
        batch_op.drop_column('isrc')

    with op.batch_alter_table('artists', schema=None) as batch_op:
        batch_op.add_column(sa.Column('title', sa.String(length=120), nullable=False))
        batch_op.drop_column('name')

    with op.batch_alter_table('catalog_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('comment', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('created_date', sa.DateTime(timezone=True), nullable=False))
        batch_op.drop_column('notes')
        batch_op.drop_column('item_type')
        batch_op.drop_column('date_added')

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.add_column(sa.Column('artist_id', sa.Integer(), nullable=False))
        batch_op.add_column(sa.Column('album_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('track_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('comment', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('private', sa.Boolean(), nullable=False))
        batch_op.add_column(sa.Column('created_date', sa.DateTime(timezone=True), nullable=False))
        batch_op.add_column(sa.Column('updated_date', sa.DateTime(timezone=True), nullable=False))
        batch_op.drop_constraint('reviews_item_id_fkey', type_='foreignkey')
        batch_op.create_foreign_key(None, 'artists', ['artist_id'], ['id'])
        batch_op.create_foreign_key(None, 'tracks', ['track_id'], ['id'])
        batch_op.create_foreign_key(None, 'albums', ['album_id'], ['id'])
        batch_op.drop_column('item_id')
        batch_op.drop_column('item_type')
        batch_op.drop_column('content')
        batch_op.drop_column('date_added')

    with op.batch_alter_table('tracks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('iswc', sa.String(length=30), nullable=True))
        batch_op.add_column(sa.Column('disc_number', sa.Integer(), nullable=True))
        batch_op.drop_constraint('tracks_ean_key', type_='unique')
        batch_op.drop_constraint('tracks_upc_key', type_='unique')
        batch_op.create_unique_constraint(None, ['iswc'])
        batch_op.drop_constraint('tracks_album_id_fkey', type_='foreignkey')
        batch_op.drop_column('album_id')
        batch_op.drop_column('ean')
        batch_op.drop_column('upc')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('tracks', schema=None) as batch_op:
        batch_op.add_column(sa.Column('upc', sa.VARCHAR(length=30), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ean', sa.VARCHAR(length=30), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('album_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.create_foreign_key('tracks_album_id_fkey', 'albums', ['album_id'], ['id'])
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint('tracks_upc_key', ['upc'])
        batch_op.create_unique_constraint('tracks_ean_key', ['ean'])
        batch_op.drop_column('disc_number')
        batch_op.drop_column('iswc')

    with op.batch_alter_table('reviews', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date_added', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('item_type', postgresql.ENUM('ALBUM', 'ARTIST', 'SONG', name='catalog_item_type_enum'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('reviews_item_id_fkey', 'albums', ['item_id'], ['id'])
        batch_op.drop_column('updated_date')
        batch_op.drop_column('created_date')
        batch_op.drop_column('private')
        batch_op.drop_column('comment')
        batch_op.drop_column('track_id')
        batch_op.drop_column('album_id')
        batch_op.drop_column('artist_id')

    with op.batch_alter_table('catalog_items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date_added', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('item_type', postgresql.ENUM('ALBUM', 'ARTIST', 'SONG', name='catalog_item_type_enum'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True))
        batch_op.drop_column('created_date')
        batch_op.drop_column('comment')

    with op.batch_alter_table('artists', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False))
        batch_op.drop_column('title')

    with op.batch_alter_table('albums', schema=None) as batch_op:
        batch_op.add_column(sa.Column('isrc', sa.VARCHAR(length=30), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ean', sa.VARCHAR(length=30), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False))
        batch_op.create_unique_constraint('albums_isrc_key', ['isrc'])
        batch_op.create_unique_constraint('albums_ean_key', ['ean'])
        batch_op.drop_column('release_date')
        batch_op.drop_column('total_tracks')
        batch_op.drop_column('title')

    op.create_table('track_artist',
    sa.Column('track_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('artist_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['artist_id'], ['artists.id'], name='track_artist_artist_id_fkey'),
    sa.ForeignKeyConstraint(['track_id'], ['tracks.id'], name='track_artist_track_id_fkey'),
    sa.PrimaryKeyConstraint('track_id', 'artist_id', name='track_artist_pkey')
    )
    op.drop_table('artist_album_track')
    # ### end Alembic commands ###
